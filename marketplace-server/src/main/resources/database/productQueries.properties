#-- show all products created --
products.show = SELECT goods.id, goods.quantity, goods.price, goods.discount, goods.shipping_date,\
goods.in_stock, goods.status, goods.image, goods.description, product.id, product.name,\
firm.id, firm.name, category.id, category.name \
FROM goods INNER JOIN product ON goods.prod_id = product.id INNER JOIN \
firm ON goods.firm_id = firm.id LEFT JOIN category ON product.category_id = category.id

#-- create product --
product.insert = INSERT INTO product(name, category_id) \
VALUES (:productName, :categoryId) RETURNING id

#unit id, img, status, shipdate
good.insert = INSERT INTO goods(prod_id, firm_id, quantity, price, \
discount, in_stock, description) \
VALUES (:prodId, :firmId, :quantity, :price, \
:discount, :inStock, :description) RETURNING id

firm.insert = INSERT INTO firm(name) \
VALUES (:firmName) RETURNING id

unit.insert = INSERT INTO unit(unit) \
VALUES (:unit) RETURNING id

category.insert = INSERT INTO category(name) \
VALUES (:categoryName) RETURNING id

#-- search by product name --
product.find-by-name = SELECT goods.id, goods.quantity, goods.price, goods.discount, goods.shipping_date,\
goods.in_stock, goods.status, goods.image, goods.description, product.id, product.name,\
firm.id, firm.name, category.id, category.name \
FROM goods INNER JOIN product ON goods.prod_id = product.id INNER JOIN \
firm ON goods.firm_id = firm.id LEFT JOIN category ON product.category_id = category.id \
WHERE %:subName% LIKE product.name

#-- filter by product category --
product.filter-by-category = SELECT goods.id, goods.quantity, goods.price, goods.discount, \
goods.shipping_date, goods.in_stock, goods.status, goods.image, goods.description, \
product.id, product.name, firm.id, firm.name, category.id, category.name \
FROM goods INNER JOIN product ON goods.prod_id = product.id INNER JOIN \
firm ON goods.firm_id = firm.id INNER JOIN category ON product.category_id = category.id \
WHERE category.id = :categoryId


#-- filter by price --
product.filter-by-price-range = SELECT goods.id, goods.quantity, goods.price, goods.discount, \
goods.shipping_date, goods.in_stock, goods.status, goods.image, goods.description, \
product.id, product.name, firm.id, firm.name, category.id, category.name \
FROM goods INNER JOIN product ON goods.prod_id = product.id INNER JOIN \
firm ON goods.firm_id = firm.id LEFT JOIN category ON product.category_id = category.id \
WHERE goods.price BETWEEN :downLimit AND :upLimit

product.find-by-id = SELECT goods.id, goods.quantity, goods.price, goods.discount, goods.shipping_date,\
goods.in_stock, goods.status, goods.image, goods.description, product.id, product.name,\
firm.id, firm.name, category.id, category.name \
FROM goods INNER JOIN product ON goods.prod_id = product.id INNER JOIN \
firm ON goods.firm_id = firm.id LEFT JOIN category ON product.category_id = category.id \
WHERE goods.id = :goodId

product.update-firm = UPDATE goods SET field = :field WHERE id = :id \
  RETURNING id, user_id, goods_id, quantity, adding_time

#-- Sort by price ASC--
product.sort-by-price-desc = SELECT * FROM ? ORDER BY goods.price ASC

#-- Sort by price DESC--
product.sort-by-price-asc = SELECT * FROM ? ORDER BY goods.price DESC

#-- Sort by name ASC--
product.sort-by-name-asc = SELECT * FROM ? ORDER BY product.name ASC

#-- Sort by name DESC--
product.sort-by-name-desc = SELECT * FROM ? ORDER BY product.name DESC

#-- Sort by newest (by availability date) DESC --
product.sort-by-newest = SELECT * FROM ? ORDER BY goods.shipping_date DESC
